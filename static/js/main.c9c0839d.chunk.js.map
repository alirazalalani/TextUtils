{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","class","id","onClick","toggleMode","htmlFor","redtoggle","TextForm","useState","text","setText","heading","rows","value","onChange","event","target","length","newText","toUpperCase","showAlert","newText1","toLowerCase","split","reverse","join","defaultProps","aboutText","Alert","alert","role","word","lw","charAt","slice","capatalize","msg","App","setMode","setAlert","message","setTimeout","document","body","style","backgroundColor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"2LAIe,SAASA,EAAOC,GAC3B,OAEF,sBAAKC,UAAS,0CAAqCD,EAAME,KAA3C,eAAsDF,EAAME,MAA1E,UACA,mBAAGD,UAAS,oBAAuBE,KAAK,IAAxC,SAA6CH,EAAMI,QACnD,wBAAQH,UAAU,iBAAiBI,KAAK,SAAS,cAAY,WAAW,cAAY,0BAA0B,gBAAc,yBAAyB,gBAAc,QAAQ,aAAW,oBAAtL,SACE,sBAAMJ,UAAU,0BAGlB,sBAAKK,MAAM,2BAA2BC,GAAG,yBAAzC,UACE,oBAAID,MAAM,qBAAV,SACE,oBAAIA,MAAM,kBAAV,SACE,mBAAGA,MAAM,WAAWH,KAAK,IAAzB,uBAYN,sBAAKF,UAAS,sCAA8C,UAAbD,EAAME,KAAe,OAAO,QAA7D,UAAd,UACA,uBAAOD,UAAU,mBAAmBI,KAAK,WAAWE,GAAG,yBAAyBC,QAASR,EAAMS,aAC/F,uBAAOR,UAAU,mBAAmBS,QAAQ,yBAA5C,kCAEF,sBAAKT,UAAS,sCAA8C,UAAbD,EAAME,KAAe,SAAS,QAA/D,UAAd,UACE,uBAAOD,UAAU,mBAAmBI,KAAK,WAAWE,GAAG,yBAAyBC,QAASR,EAAMW,YAC/F,uBAAOV,UAAU,mBAAmBS,QAAQ,yBAA5C,uCC9Ba,SAASE,EAASZ,GAE7B,IAyDA,EAAwBa,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAGA,OACI,qCACA,oBAAId,UAAS,oBAA4B,UAAbD,EAAME,KAAe,QAAQ,SAAzD,SAAqEF,EAAMgB,UAC3E,sBAAKf,UAAU,iBAAf,UAEN,0BAAUA,UAAS,4BAAoC,UAAbD,EAAME,KAAgB,QAAQ,QAArD,eAAgF,UAAbF,EAAME,KAAgB,QAAQ,QAAYK,GAAG,QAAQU,KAAK,IAAIC,MAAOJ,EAAMK,SArD1I,SAACC,GAGlBL,EAAQK,EAAMC,OAAOH,UAoD7B,wBAAQjB,UAAU,uBAAuBO,QAnEjB,WAChB,GAAGM,EAAKQ,OAAO,EAAE,CAEpB,IAAIC,EAAQT,EAAKU,cACdT,EAAQQ,GACRvB,EAAMyB,UAAU,0BAA0B,gBAGtCzB,EAAMyB,UAAU,yBAAyB,WA2DrD,kCACA,wBAAQxB,UAAU,sBAAsBO,QAjDhB,WAChB,GAAGM,EAAKQ,OAAO,EACf,CACA,IAAII,EAASZ,EAAKa,cAClBZ,EAAQW,GACR1B,EAAMyB,UAAU,0BAA0B,gBAItCzB,EAAMyB,UAAU,yBAAyB,WAwCrD,mCACA,wBAAQxB,UAAU,uBAAuBO,QArCf,WAClB,GAAGM,EAAKQ,OAAO,EAAE,CAEjBP,EADY,KAGZf,EAAMyB,UAAU,sBAAsB,gBAIlCzB,EAAMyB,UAAU,yBAAyB,WA4BrD,wBACA,wBAAQxB,UAAU,uBAAuBO,QAxBjB,WAChB,GAAGM,EAAKQ,OAAO,EAAE,CACjB,IAAIC,EAAQT,EAAKc,MAAM,IAAIC,UAAUC,KAAK,IAC1Cf,EAAQQ,GACRvB,EAAMyB,UAAU,yBAAyB,gBAGrCzB,EAAMyB,UAAU,yBAAyB,WAiBrD,6BAGA,sBAAKxB,UAAS,yBAAiC,UAAbD,EAAME,KAAe,OAAO,SAA9D,UACI,mDACA,8BAAIY,EAAKQ,OAAT,mBAAiCR,EAAKc,MAAM,KAAKN,OAAO,EAAxD,YACA,8BAAI,KAAMR,EAAKc,MAAM,KAAKN,OAA1B,aACA,yCACA,4BAAIR,EAAKQ,OAAS,EAAIR,EAAK,kEDjC/Bf,EAAOgC,aAAa,CAChB3B,MAAM,iBACN4B,UAAU,kBEpCCC,MAff,SAAejC,GAOX,OACGA,EAAMkC,OAAS,sBAAK5B,MAAK,sBAAiBN,EAAMkC,MAAM7B,KAA7B,gCAAiE8B,KAAK,QAAhF,UACpB,iCARmB,SAACC,GACf,IAAMC,EAAGD,EAAKT,cACd,OAAOU,EAAGC,OAAO,GAAGd,cAAgBa,EAAGE,MAAM,GAMzCC,CAAWxC,EAAMkC,MAAM7B,QADZ,KAC8BL,EAAMkC,MAAMO,QCmFjDC,MA9Ef,WAEE,MAAwB7B,mBAAS,SAAjC,mBAAOX,EAAP,KAAayC,EAAb,KAEA,EAA0B9B,mBAAS,MAAnC,mBAAOqB,EAAP,KAAcU,EAAd,KAIMnB,EAAU,SAACoB,EAAQxC,GACvBuC,EAAS,CACPH,IAAII,EACJxC,KAAKA,IAGPyC,YAAW,WACTF,EAAS,QACR,OAuCL,OACE,qCAED,cAAC7C,EAAD,CAAQK,MAAM,WAAW4B,UAAU,QAAS9B,KAAMA,EAAMO,WAvCxC,WAEL,UAAPP,GAEHyC,EAAQ,SACRI,SAASC,KAAKC,MAAMC,gBAAgB,QACpCzB,EAAU,6BAA6B,aAKvCkB,EAAQ,SACRI,SAASC,KAAKC,MAAMC,gBAAgB,QACpCzB,EAAU,8BAA8B,aA0BuCd,UAnBjE,WACJ,UAAPT,GAEDyC,EAAQ,SACRI,SAASC,KAAKC,MAAMC,gBAAgB,MACpCzB,EAAU,4BAA4B,aAGtCkB,EAAQ,SACRI,SAASC,KAAKC,MAAMC,gBAAgB,QACpCzB,EAAU,8BAA8B,eAU3C,cAAC,EAAD,CAAOS,MAAOA,IACd,qBAAKjC,UAAU,iBAAf,SAMO,cAACW,EAAD,CAAUI,QAAQ,kCAAkCd,KAAMA,EAAMuB,UAAWA,UCtEtE0B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,EAAD,IACAd,SAASe,eAAe,SAE1BX,K","file":"static/js/main.c9c0839d.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n// import {a} from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n\r\n  <nav className={`navbar navbar-expand-lg  navbar-${props.mode} bg-${props.mode}`}>\r\n  <a className={`navbar-brand mx-1`} href=\"#\">{props.title}</a>\r\n  <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    <span className=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n\r\n  <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n    <ul class=\"navbar-nav mr-auto\">\r\n      <li class=\"nav-item active\">\r\n        <a class=\"nav-link\" href=\"#\">Home </a>\r\n      </li>\r\n      {/* <li className=\"nav-item\">\r\n        <a className=\"nav-a\" href=\"/about\">{props.aboutText}</a>\r\n      </li> */}\r\n      </ul>    \r\n   \r\n      {/* <form className=\"d-flex justify-content-end\">\r\n    <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n    <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n  </form> */}\r\n  \r\n  <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'} mx-2 `}>\r\n  <input className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault\" onClick={props.toggleMode}/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enabled Dark Mode</label>\r\n</div>\r\n<div className={`form-check form-switch text-${props.mode==='light'?'danger':'light'} mx-2 `}>\r\n  <input className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault\" onClick={props.redtoggle}/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enabled Red Mode</label>\r\n</div>\r\n\r\n\r\n</div>\r\n</nav>\r\n    );\r\n}\r\n\r\n\r\n\r\nNavbar.propTypes={\r\n\r\n    title:PropTypes.string.isRequired,\r\n    aboutText:PropTypes.string.isRequired,\r\n};\r\n\r\nNavbar.defaultProps={\r\n    title:\"Set title here\",\r\n    aboutText:\"Set About here\"\r\n};\r\n","import React, { useState } from 'react';\r\n// import Alert from './Alert';\r\nimport App from '../App.js';\r\n\r\nexport default function TextForm(props) {\r\n\r\n    const handleUpClick=()=>{\r\n        if(text.length>0){\r\n        // console.log(\"UpperCase was clicked \"+ text);\r\n     let newText=text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"converted to upper Case\",\"success\");\r\n        }\r\n        else{\r\n            props.showAlert(\"Please enter some text\",\"danger\");\r\n        }\r\n    }\r\n\r\n    const handleOnChange=(event)=>{\r\n        // console.log(\"on Change\");\r\n    \r\n        setText(event.target.value);\r\n        \r\n    }\r\n    \r\n    const handleLowCase=()=>{\r\n        if(text.length>0)\r\n        {\r\n        let newText1=text.toLowerCase();\r\n        setText(newText1);\r\n        props.showAlert(\"converted to Lower case\",\"success\");\r\n        }\r\n        else\r\n        {\r\n            props.showAlert(\"Please enter some text\",\"danger\");\r\n        }\r\n    }\r\n    \r\n    const handleClearText=()=>{\r\n        if(text.length>0){\r\n        let newText=' ';\r\n        setText(newText);\r\n        \r\n        props.showAlert(\"Text has been clear\",\"success\");\r\n        // text.length=0;    \r\n    }\r\n       else{\r\n            props.showAlert(\"Please enter some text\",\"danger\");\r\n        }\r\n        \r\n    }\r\n   \r\n    const handleReverse=()=>{\r\n        if(text.length>0){\r\n        let newText=text.split(\"\").reverse().join(\"\");\r\n        setText(newText);\r\n        props.showAlert(\"Text has been reversed\",\"success\");    \r\n    }\r\n        else{\r\n            props.showAlert(\"Please enter some text\",\"danger\");\r\n        }\r\n\r\n    }\r\n    const [text, setText] = useState(\"\") ;   //usestate hook, setText is the function that helps to change the value of text variable\r\n    \r\n    // setText(\"Please Enter here\");\r\n    return (\r\n        <>\r\n        <h1 className={`mx-3 text-${props.mode==='light'?'black':'light'}`}>{props.heading}</h1>\r\n        <div className=\"mb-3 container\">\r\n  {/* <label for=\"myBox\" className=\"form-label\">Enter Your text Here</label> */}\r\n  <textarea className={`form-control text-${props.mode==='light'? 'black':'light'} bg-${props.mode==='light'? 'light':'dark'}`}   id='myBox' rows='8' value={text} onChange={handleOnChange}></textarea>\r\n\r\n<button className=\"btn btn-primary my-4\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n<button className=\"btn btn-danger mx-4\" onClick={handleLowCase}>Convert to LowerCase </button>\r\n<button className=\"btn btn-success mx-4\" onClick={handleClearText}>Clear Text</button>\r\n<button className=\"btn btn-primary mx-4\" onClick={handleReverse}>Reverse Text</button>\r\n</div>\r\n\r\n<div className={`container text-${props.mode==='light'?'dark':'light'}`}>\r\n    <h2>Text Summary Here</h2>\r\n    <p>{text.length} characters and {text.split(\" \").length-1} words</p>\r\n    <p>{0.008*text.split(\" \").length}Minutes</p>\r\n    <h2>Preview</h2>\r\n    <p>{text.length > 0 ? text:'Enter something in the textbox above to preview it here'}</p>\r\n</div>\r\n\r\n\r\n\r\n\r\n</>\r\n         \r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capatalize=(word)=>{\r\n       const lw=word.toLowerCase();\r\n       return lw.charAt(0).toUpperCase() + lw.slice(1);\r\n\r\n    }\r\n    \r\n    return (\r\n       props.alert && <div class={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n  <strong>{capatalize(props.alert.type)}</strong>: {props.alert.msg}\r\n  {/* <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button> */}\r\n</div>\r\n    )\r\n}\r\n\r\nexport default Alert;\r\n","import './App.css';\n// import About from './components/About';\nimport Navbar from './components/Navbar.js';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\n// import About from './components/About';\n\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n\n\nfunction App() {\n  // const [colour, setColour] = useState('light')\n  const [mode, setMode] = useState('light'); //weather dark mode is enbaled or not\n\n  const [alert, setAlert] = useState(null);\n\n  // const [redMode, setRedMode] = useState(\"light\");\n  \n  const showAlert=(message,type)=>{\n    setAlert({\n      msg:message,\n      type:type,\n\n    });\n    setTimeout(() => {\n      setAlert(null)\n    }, 1500);\n  }\n  \n  const toggleMode=()=>{\n\n    if(mode==='light')\n    {\n    setMode(\"black\");\n    document.body.style.backgroundColor='black';\n    showAlert(\"Dark mode has been enabled\",\"success\");\n    // document.body.style.color='white';\n    // setColour(\"light\")\n    }\n    else{\n    setMode(\"light\");\n    document.body.style.backgroundColor='white';\n    showAlert(\"Light mode has been enabled\",\"success\");\n    // document.body.style.color='dark';\n    // setColour(\"dark\");\n    }\n\n  }\n\n  const redtoggle=()=>{\n    if(mode===\"light\")\n    {\n      setMode(\"black\");\n      document.body.style.backgroundColor='red';\n      showAlert(\"Red Mode has been enabled\",\"success\");\n    }\n    else{\n      setMode(\"light\");\n      document.body.style.backgroundColor='white';\n      showAlert(\"Light Mode has been enabled\",\"success\");\n    }\n\n  }\n\n\n  return (\n    <>\n   {/* <Router> */}\n   <Navbar title=\"TextUtil\" aboutText=\"About\"  mode={mode} toggleMode={toggleMode} redtoggle={redtoggle} />\n   <Alert alert={alert}/>\n   <div className=\"container my-3\" >\n   {/* <Switch> */}\n          {/* <Route exact path=\"/about\"> */}\n            {/* <About/> */}\n          {/* </Route> */}\n          {/* <Route exact path=\"/home\"> */}\n          <TextForm heading=\"Enter the text to analyze below\" mode={mode} showAlert={showAlert} />\n          {/* </Route> */}\n        {/* </Switch> */}\n      </div>\n   {/* </Router> */}\n    </>\n    \n  );\n\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n);\nreportWebVitals();\n"],"sourceRoot":""}